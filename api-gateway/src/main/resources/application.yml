server:
  port: 8083

logging:
  level:
    root: INFO
    org.springframework.cloud.gateway: TRACE
    org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator: INFO
    reactor.netty: TRACE

spring:
  security:
    oauth2:
      client:
        registration:
          google:
            client-id: ${GOOGLE_CLIENTID}
            client-secret: ${GOOGLE_CLIENTSECRET}
            scope: openid,profile,email
            redirect-uri: http://localhost:8083/login/oauth2/code/google
        provider:
          google:
            authorization-uri: https://accounts.google.com/o/oauth2/auth
            token-uri: https://oauth2.googleapis.com/token
            user-info-uri: https://openidconnect.googleapis.com/v1/userinfo
      resourceserver:
        jwt:
          issuer-uri: https://accounts.google.com
          jwk-set-uri: https://www.googleapis.com/oauth2/v3/certs
  cloud:
    gateway:
      routes:
        - id: frontend-service
          uri: http://${FRONTEND_SERVICE_BASEURL:localhost:8084}
          predicates:
            - Path=/frontend/**
          filters:
            - RewritePath=/frontend/(?<path>.*), /${path}


        - id: book-service-get
          uri: http://${BOOK_SERVICE_BASEURL:localhost:8082}
          predicates:
            - Path=/books
            - Method=GET
          filters:
            - SetPath=/api/book

        - id: book-service-post
          uri: http://${BOOK_SERVICE_BASEURL:localhost:8082}
          predicates:
            - Path=/books
            - Method=POST
          filters:
            - SetPath=/api/book
#            - RemoveRequestHeader=Cookie

        - id: book-service-put
          uri: http://${BOOK_SERVICE_BASEURL:localhost:8082}
          predicates:
            - Path=/books/{id}
            - Method=PUT
          filters:
            - SetPath=/api/book/{id}

        - id: book-service-delete
          uri: http://${BOOK_SERVICE_BASEURL:localhost:8082}
          predicates:
            - Path=/books/{id}
            - Method=DELETE
          filters:
            - SetPath=/api/book/{id}

        - id: user-service-get
          uri: http://${USER_SERVICE_BASEURL:localhost:8080}
          predicates:
            - Path=/users
            - Method=GET
          filters:
            - SetPath=/api/user

        - id: user-service-post
          uri: http://${USER_SERVICE_BASEURL:localhost:8080}
          predicates:
            - Path=/users
            - Method=POST
          filters:
            - SetPath=/api/user

        - id: readinglist-service-get
          uri: http://${READINGLIST_SERVICE_BASEURL:localhost:8081}
          predicates:
            - Path=/readinglists
            - Method=GET
          filters:
            - SetPath=/api/readinglist

        - id: readinglist-service-post
          uri: http://${READINGLIST_SERVICE_BASEURL:localhost:8081}
          predicates:
            - Path=/readinglists
            - Method=POST
          filters:
            - SetPath=/api/readinglist
